{"version":3,"sources":["components/Header.js","components/Footer.js","components/NotFound.js","components/Matchups.js","API.js","containers/DateSelect.js","components/Team.js","components/Opponent.js","containers/Matchup.js","components/Routes.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Link","to","style","textDecoration","color","Footer","NotFound","Matchup","games","this","props","Fragment","map","game","key","gameno","pathname","concat","src","team_logo","alt","backgroundColor","my_outcome","my_odds","toFixed","moj_outcome","moj_odds","opponent_logo","opponent_my_outcome","opponent_my_odds","opponent_moj_outcome","opponent_moj_odds","Component","getDay","_x","_getDay","apply","arguments","_callee2","calendar_date","response","regenerator_default","wrap","_context2","prev","next","fetch","method","headers","Content-type","body","JSON","stringify","date","sent","abrupt","json","stop","today","dd","getDate","mm","getMonth","getFullYear","plusToDate","days","result","Date","setDate","getMatchupPrevious","_x2","_getMatchupPrevious","_callee3","_context3","getMatchupCurrent","_x3","_getMatchupCurrent","_callee4","_context4","DateSelect","state","count","handleNext","_callee","countobj","countcopy","_context","Object","objectSpread","_this","componentDidMount","handlePrevious","day","date_today","undefined","setState","console","log","_this2","iconContext","Provider","value","verticalAlign","onClick","e","fi","toLocaleDateString","Matchups","Team","_ref","gamePrevious","gameCurrent","logo_team","scope","team_runs","team_obp","team_ops","team_opsp","Opponent","logo_opponent","opponent_runs","opponent_obp","opponent_ops","opponent_opsp","_Component","_getPrototypeOf2","classCallCheck","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","asyncToGenerator","mark","match","params","inherits","createClass","_this$state","id","components_Team","components_Opponent","Routes","Switch","Route","exact","path","component","App","components_Header","components_Routes","components_Footer","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mPAWeA,EARA,kBACbC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mCAAkCH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,IAAIC,MAAO,CAAEC,eAAgB,OAAQC,MAAO,YAArD,iBCIzCC,EARA,kBACbT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAhB,qCCQSO,EAXE,kBACbV,EAAAC,EAAAC,cAAA,OAAKC,UAAY,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,cACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,mFCkEDQ,mLApEF,IACGC,EAAUC,KAAKC,MAAfF,MACR,OAAOA,EACDZ,EAAAC,EAAAC,cAACF,EAAAC,EAAMc,SAAP,KACEf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAENS,EAAMI,IAAI,SAAAC,GAAI,OACVjB,EAAAC,EAAAC,cAAA,MAAIgB,IAAKD,EAAKE,OAAQhB,UAAU,mBAC5BH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,CAAEe,SAAQ,aAAAC,OAAeJ,EAAKE,UACpCnB,EAAAC,EAAAC,cAAA,WAASC,UAAU,iBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAemB,IAAKL,EAAKM,UAAWC,IAAI,aACvDxB,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kDACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,MAAII,MAAO,CACHmB,gBAAqC,QAApBR,EAAKS,WAAuB,UAAY,YACzDT,EAAKU,QAAUV,EAAKU,QAAQC,QAAQ,GAAK,uBAErD5B,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,MAAII,MAAO,CACHmB,gBAAsC,QAArBR,EAAKY,YAAwB,UAAY,YAC1DZ,EAAKa,SAAWb,EAAKa,SAAW,0BAKxD9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAemB,IAAKL,EAAKc,cAAeP,IAAI,iBAC3DxB,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kDACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,MAAII,MAAO,CACHmB,gBAA8C,QAA7BR,EAAKe,oBAAgC,UAAY,YAClEf,EAAKgB,iBAAmBhB,EAAKgB,iBAAiBL,QAAQ,GAAK,uBAEvE5B,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,MAAII,MAAO,CACHmB,gBAA+C,QAA9BR,EAAKiB,qBAAiC,UAAY,YACnEjB,EAAKkB,kBAAoBlB,EAAKkB,kBAAoB,kCAa1GnC,EAAAC,EAAAC,cAAA,YAEDF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdH,EAAAC,EAAAC,cAAA,gCAjEMkC,aCSf,SAAeC,EAAtBC,GAAA,OAAAC,EAAAC,MAAA3B,KAAA4B,sDAAO,SAAAC,EAAsBC,GAAtB,IAAAC,EAAA,OAAAC,EAAA5C,EAAA6C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEiBC,MAAM,wBAAyB,CACrDC,OAAQ,OACRC,QAAS,CACRC,eAAgB,oBAEjBC,KAAMC,KAAKC,UAAU,CACpBC,KAAQd,MARJ,cAEAC,EAFAG,EAAAW,KAAAX,EAAAY,OAAA,SAYCf,EAASgB,KAAK,CAAEhD,MAASgC,KAZ1B,wBAAAG,EAAAc,SAAAnB,EAAA7B,gCAsBA,SAASiD,EAAML,GACrB,IACIM,EAAKN,EAAKO,UACVC,EAAKR,EAAKS,WAAa,EAa3B,OAVIH,EAAK,KACRA,EAAK,IAAMA,GAGRE,EAAK,KACRA,EAAK,IAAMA,GAPDR,EAAKU,cAUD,IAAMF,EAAK,IAAMF,EAM1B,SAASK,EAAWX,EAAMY,GAEhC,IAAIC,EAAS,IAAIC,KAAKd,GAEtB,OADAa,EAAOE,QAAQf,EAAKO,UAAYK,GACzBC,EAUD,SAAeG,EAAtBC,GAAA,OAAAC,EAAAnC,MAAA3B,KAAA4B,sDAAO,SAAAmC,EAAkCzD,GAAlC,IAAAyB,EAAA,OAAAC,EAAA5C,EAAA6C,KAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,cAAA4B,EAAA5B,KAAA,EAEiBC,MAAM,oCAAqC,CACjEC,OAAQ,OACRC,QAAS,CACRC,eAAgB,oBAEjBC,KAAMC,KAAKC,UAAU,CACpBrC,OAAUA,MARN,cAEAyB,EAFAiC,EAAAnB,KAAAmB,EAAAlB,OAAA,SAYCf,EAASgB,KAAK,CAAE3C,KAAQ2B,KAZzB,wBAAAiC,EAAAhB,SAAAe,EAAA/D,gCAiBA,SAAeiE,EAAtBC,GAAA,OAAAC,EAAAxC,MAAA3B,KAAA4B,sDAAO,SAAAwC,EAAiC9D,GAAjC,IAAAyB,EAAA,OAAAC,EAAA5C,EAAA6C,KAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,cAAAiC,EAAAjC,KAAA,EAEiBC,MAAM,mCAAoC,CAChEC,OAAQ,OACRC,QAAS,CACRC,eAAgB,oBAEjBC,KAAMC,KAAKC,UAAU,CACpBrC,OAAUA,MARN,cAEAyB,EAFAsC,EAAAxB,KAAAwB,EAAAvB,OAAA,SAYCf,EAASgB,KAAK,CAAE3C,KAAQ2B,KAZzB,wBAAAsC,EAAArB,SAAAoB,EAAApE,oDCbQsE,6MA3DXC,MAAQ,CACJC,MAAO,EACP5B,KAAM,IAAIc,KACV3D,MAAO,QAGX0E,gCAAa,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAA5C,EAAA5C,EAAA6C,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,OACLuC,EADKG,OAAAC,EAAA,EAAAD,CAAA,GACWE,EAAKT,OACrBK,EAAYD,EAASH,MACzBI,GAAwB,EACxBI,EAAKC,kBAAkBL,GAJd,wBAAAC,EAAA7B,SAAA0B,EAAA1E,WAObkF,oCAAiB,SAAArD,IAAA,IAAA8C,EAAAC,EAAA,OAAA5C,EAAA5C,EAAA6C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACTuC,EADSG,OAAAC,EAAA,EAAAD,CAAA,GACOE,EAAKT,OACrBK,EAAYD,EAASH,MACzBI,GAAwB,EACxBI,EAAKC,kBAAkBL,GAJV,wBAAA1C,EAAAc,SAAAnB,EAAA7B,WAOjBiF,wDAAoB,SAAAlB,EAAOoB,GAAP,IAAAP,EAAAQ,EAAAxC,EAAA7C,EAAA,OAAAiC,EAAA5C,EAAA6C,KAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,cACZwC,OAAoBS,IAARF,EAAoBA,EAAMH,EAAKT,MAAMC,MACjDY,EAAa,IAAI1B,KAFLM,EAAA5B,KAAA,EAGCmB,EAAW6B,EAAYR,GAHxB,cAGZhC,EAHYoB,EAAAnB,KAAAmB,EAAA5B,KAAA,EAIEZ,EAAOyB,EAAML,IAJf,OAIZ7C,EAJYiE,EAAAnB,KAMhBmC,EAAKM,SAAS,CACVd,MAAOI,EACPhC,KAAMA,EACN7C,UAGJwF,QAAQC,IAAIR,EAAKT,OAZD,yBAAAP,EAAAhB,SAAAe,EAAA/D,uIAeX,IAAAyF,EAAAzF,KACL,OAAOb,EAAAC,EAAAC,cAACF,EAAAC,EAAMc,SAAP,KACHf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAACqG,EAAA,EAAYC,SAAb,CAAsBC,MAAO,CAAEnG,MAAO,CAAEoG,cAAe,YACnD1G,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,KAAGyG,QAAS,SAACC,GAAD,OAAON,EAAKP,eAAea,KACnC5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,OAFR,qBAG0B7G,EAAAC,EAAAC,cAAA,KAAGyG,QAAS,SAACC,GAAD,OAAON,EAAKhB,WAAWsB,KACrD5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,QAGR7G,EAAAC,EAAAC,cAAA,UAAKW,KAAKuE,MAAM3B,KAAKqD,mBAAmB,aAIpD9G,EAAAC,EAAAC,cAAC6G,EAAD,CACItD,KAAM5C,KAAKuE,MAAM3B,KACjB7C,MAAOC,KAAKuE,MAAMxE,gBAtDTwB,aCsCV4E,EAhDF,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,aAAcC,EAAjBF,EAAiBE,YAAjB,OACTnH,EAAAC,EAAAC,cAACF,EAAAC,EAAMc,SAAP,KACIf,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKoB,IAAK4F,EAAa,GAAGE,UAAW5F,IAAI,cAE7CxB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BAAd,gBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACVH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAImH,MAAM,QACVrH,EAAAC,EAAAC,cAAA,MAAImH,MAAM,OAAV,QACArH,EAAAC,EAAAC,cAAA,MAAImH,MAAM,OAAV,UAGRrH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAImH,MAAM,OAAV,QACArH,EAAAC,EAAAC,cAAA,UAAKgH,EAAa,GAAGI,WACrBtH,EAAAC,EAAAC,cAAA,UAAKiH,EAAY,GAAGG,YAExBtH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAImH,MAAM,OAAV,eACArH,EAAAC,EAAAC,cAAA,UAAKgH,EAAa,GAAGK,UACrBvH,EAAAC,EAAAC,cAAA,UAAKiH,EAAY,GAAGI,WAExBvH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAImH,MAAM,OAAV,0BACArH,EAAAC,EAAAC,cAAA,UAAKgH,EAAa,GAAGM,UACrBxH,EAAAC,EAAAC,cAAA,UAAKiH,EAAY,GAAGK,WAExBxH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAImH,MAAM,OAAV,uCACArH,EAAAC,EAAAC,cAAA,UAAKgH,EAAa,GAAGO,WACrBzH,EAAAC,EAAAC,cAAA,UAAKiH,EAAY,GAAGM,iBAO5CzH,EAAAC,EAAAC,cAAA,aCIOwH,EAhDE,SAAAT,GAAA,IAAGC,EAAHD,EAAGC,aAAcC,EAAjBF,EAAiBE,YAAjB,OACbnH,EAAAC,EAAAC,cAACF,EAAAC,EAAMc,SAAP,KACIf,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKoB,IAAK4F,EAAa,GAAGS,cAAenG,IAAI,kBAEjDxB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BAAd,gBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACVH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAImH,MAAM,QACVrH,EAAAC,EAAAC,cAAA,MAAImH,MAAM,OAAV,QACArH,EAAAC,EAAAC,cAAA,MAAImH,MAAM,OAAV,UAGRrH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAImH,MAAM,OAAV,QACArH,EAAAC,EAAAC,cAAA,UAAKgH,EAAa,GAAGU,eACrB5H,EAAAC,EAAAC,cAAA,UAAKiH,EAAY,GAAGS,gBAExB5H,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAImH,MAAM,OAAV,eACArH,EAAAC,EAAAC,cAAA,UAAKgH,EAAa,GAAGW,cACrB7H,EAAAC,EAAAC,cAAA,UAAKiH,EAAY,GAAGU,eAExB7H,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAImH,MAAM,OAAV,0BACArH,EAAAC,EAAAC,cAAA,UAAKgH,EAAa,GAAGY,cACrB9H,EAAAC,EAAAC,cAAA,UAAKiH,EAAY,GAAGW,eAExB9H,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAImH,MAAM,OAAV,uCACArH,EAAAC,EAAAC,cAAA,UAAKgH,EAAa,GAAGa,eACrB/H,EAAAC,EAAAC,cAAA,UAAKiH,EAAY,GAAGY,qBAO5C/H,EAAAC,EAAAC,cAAA,aCOOS,EAhDf,SAAAqH,GAAA,SAAArH,IAAA,IAAAsH,EAAApC,EAAAF,OAAAuC,EAAA,EAAAvC,CAAA9E,KAAAF,GAAA,QAAAwH,EAAA1F,UAAA2F,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAA9F,UAAA8F,GAAA,OAAA1C,EAAAF,OAAA6C,EAAA,EAAA7C,CAAA9E,MAAAoH,EAAAtC,OAAA8C,EAAA,EAAA9C,CAAAhF,IAAA+H,KAAAlG,MAAAyF,EAAA,CAAApH,MAAAQ,OAAAgH,MAEIjD,MAAQ,CACJnE,KAAM,MAHd4E,EAMIC,kBANJH,OAAAgD,EAAA,EAAAhD,CAAA9C,EAAA5C,EAAA2I,KAMwB,SAAArD,IAAA,IAAApE,EAAA+F,EAAAC,EAAA9B,EAAA,OAAAxC,EAAA5C,EAAA6C,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cACR9B,EAAW0E,EAAK/E,MAAM+H,MAAMC,OAA5B3H,OADQuE,EAAAzC,KAAA,EAEWwB,EAAmBtD,GAF9B,cAEV+F,EAFUxB,EAAAhC,KAAAgC,EAAAzC,KAAA,EAGU6B,EAAkB3D,GAH5B,OAGVgG,EAHUzB,EAAAhC,KAIV2B,EAAQQ,EAAK/E,MAAMuE,MACzBQ,EAAKM,SAAS,CACVe,eACAC,cACA9B,UARY,wBAAAK,EAAA7B,SAAA0B,EAAA1E,SANxBgF,EAAA,OAAAF,OAAAoD,EAAA,EAAApD,CAAAhF,EAAAqH,GAAArC,OAAAqD,EAAA,EAAArD,CAAAhF,EAAA,EAAAO,IAAA,SAAAuF,MAAA,WAmBa,IAAAwC,EAEiCpI,KAAKuE,MAAnC8B,EAFH+B,EAEG/B,aAAcC,EAFjB8B,EAEiB9B,YAEtB,OAAOD,EACDlH,EAAAC,EAAAC,cAACF,EAAAC,EAAMc,SAAP,KACEf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM+I,GAAG,gBACpBlJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW+I,GAAG,QACzBlJ,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACiJ,EAAD,CACIhC,YAAaA,EACbD,aAAcA,KAEtBlH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW+I,GAAG,QACzBlJ,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACkJ,EAAD,CACIjC,YAAaA,EACbD,aAAcA,SAMpClH,EAAAC,EAAAC,cAAA,4BA5CdS,EAAA,CAA6ByB,aCUdiH,EATA,kBACXrJ,EAAAC,EAAAC,cAACoJ,EAAA,EAAD,KACItJ,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWvE,IACjCnF,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CACIC,OAAK,EAACC,KAAK,oBAAoBC,UAAW/I,IAC9CX,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CAAOE,KAAK,IAAIC,UAAWhJ,MCSpBiJ,0LAZX,OACE3J,EAAAC,EAAAC,cAACF,EAAAC,EAAMc,SAAP,KACEf,EAAAC,EAAAC,cAAC0J,EAAD,MACA5J,EAAAC,EAAAC,cAAA,QAAMgJ,GAAG,OACPlJ,EAAAC,EAAAC,cAAC2J,EAAD,OAEF7J,EAAAC,EAAAC,cAAC4J,EAAD,cARU1H,cCME2H,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASrB,MACvB,2DCZNsB,IAASC,OACLpK,EAAAC,EAAAC,cAACmK,EAAA,EAAD,KACIrK,EAAAC,EAAAC,cAACoK,EAAD,OACOC,SAASC,eAAe,SDwHjC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.9b1b3067.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => (\n  <div className=\"container\">\n    <nav className=\"navbar navbar-light bg-primary\">\n      <span className=\"navbar-brand mb-0 h1 text-white\"><Link to=\"/\" style={{ textDecoration: 'none', color: '#FFFFFF' }}>Baseball!</Link></span>\n    </nav>\n  </div>\n);\n\nexport default Header;","import React from 'react';\n\nconst Footer = () => (\n  <div className=\"container\">\n    <nav className=\"navbar sticky-bottom navbar-light bg-light\">\n      <span className=\"navbar-brand\">&copy; Baseball!</span>\n    </nav>\n  </div>\n);\n\nexport default Footer;","import React from 'react';\n\nconst NotFound = () => (\n    <div className = \"container\">\n        <div className = \"jumbotron\">\n            <div className=\"container\">\n                <h1 className=\"display-4\">Not Found!</h1>\n                <p className=\"lead\">The page you are looking for is unavailable.</p>\n            </div>\n        </div>\n    </div>\n)\n\nexport default NotFound;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Matchup extends Component {\n\n    render() {\n        const { games } = this.props\n        return games\n            ? <React.Fragment>\n                <div className=\"container\">\n                    <ul className=\"list-group\">\n                        {\n                            games.map(game => (\n                                <li key={game.gameno} className=\"list-group-item\">\n                                    <Link to={{ pathname: `/schedule/${game.gameno}` }}>\n                                        <section className=\"matchup_cards\">\n                                            <div className='row'>\n                                                <div className='col-lg-6'>\n                                                    <img className='hometeamlogo' src={game.team_logo} alt=\"teamlogo\"></img>\n                                                    <p>Home team</p>\n                                                    <table className=\"table table-bordered table-striped text-center\">\n                                                        <tbody>\n                                                            <tr>\n                                                                <td>My odds</td>\n                                                                <td style={{\n                                                                        backgroundColor: game.my_outcome === 'win' ? \"#E1FFE1\" : \"#FFE2E2\"\n                                                                    }}>{game.my_odds ? game.my_odds.toFixed(2) : 'no odds calculated'}</td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td>Moj odds</td>\n                                                                <td style={{\n                                                                        backgroundColor: game.moj_outcome === 'win' ? \"#E1FFE1\" : \"#FFE2E2\"\n                                                                    }}>{game.moj_odds ? game.moj_odds : 'no odds calculated'}</td>\n                                                            </tr>\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n                                                <div className='col-lg-6'>\n                                                    <img className='awayteamlogo' src={game.opponent_logo} alt=\"opponentlogo\"></img>\n                                                    <p>Away team</p>\n                                                    <table className=\"table table-bordered table-striped text-center\">\n                                                        <tbody>\n                                                            <tr>\n                                                                <td>My odds</td>\n                                                                <td style={{\n                                                                        backgroundColor: game.opponent_my_outcome === 'win' ? \"#E1FFE1\" : \"#FFE2E2\"\n                                                                    }}>{game.opponent_my_odds ? game.opponent_my_odds.toFixed(2) : 'no odds calculated'}</td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td>Moj odds</td>\n                                                                <td style={{\n                                                                        backgroundColor: game.opponent_moj_outcome === 'win' ? \"#E1FFE1\" : \"#FFE2E2\"\n                                                                    }}>{game.opponent_moj_odds ? game.opponent_moj_odds : 'no odds calculated'}</td>\n                                                            </tr>\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n                                            </div>\n                                        </section>\n                                    </Link>\n                                </li>\n                            ))\n                        }\n                    </ul>\n                </div>\n                <br />\n            </React.Fragment>\n            : (<div className=\"container\">\n                <h1>Loading...</h1>\n            </div>);\n    }\n}\n\nexport default Matchup;","///////////////////\n//\n//Game schedule\n//\n///////////////////\n\nexport async function getSchedule() {\n\tconst response = await fetch('/api/schedule');\n\treturn response.json({ 'games': response });\n\n}\n\nexport async function getDay(calendar_date) {\n\n\tconst response = await fetch('/api/schedule/:getDay', {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\t'date': calendar_date\n\t\t})\n\t});\n\n\treturn response.json({ 'games': response })\n\n}\n\n///////////////////\n//\n//Date format\n//\n///////////////////\n\nexport function today(date) {\n\tvar today = ''\n\tvar dd = date.getDate();\n\tvar mm = date.getMonth() + 1; //January is 0!\n\tvar yyyy = date.getFullYear();\n\n\tif (dd < 10) {\n\t\tdd = '0' + dd\n\t}\n\n\tif (mm < 10) {\n\t\tmm = '0' + mm\n\t}\n\n\ttoday = yyyy + '-' + mm + '-' + dd;\n\t//today2='2019-04-01'\n\treturn today\n\n}\n\nexport function plusToDate(date, days) {\n\n\tvar result = new Date(date);\n\tresult.setDate(date.getDate() + days);\n\treturn result;\n\n}\n\n///////////////////\n//\n//Matchup\n//\n///////////////////\n//Get matchup for previous year\nexport async function getMatchupPrevious(gameno) {\n\n\tconst response = await fetch('/api/schedule/:getMatchupPrevious', {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\t'gameno': gameno\n\t\t})\n\t});\n\n\treturn response.json({ 'game': response })\n\n}\n\n//Get matchup for current year\nexport async function getMatchupCurrent(gameno) {\n\n\tconst response = await fetch('/api/schedule/:getMatchupCurrent', {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\t'gameno': gameno\n\t\t})\n\t});\n\n\treturn response.json({ 'game': response })\n\n}","import React, { Component } from 'react';\n\nimport Matchups from '../components/Matchups';\n\nimport { plusToDate } from '../API';\nimport { getDay } from '../API';\nimport { today } from '../API';\n\nimport { IconContext } from \"react-icons\";\nimport { FiArrowLeftCircle } from \"react-icons/fi\";\nimport { FiArrowRightCircle } from \"react-icons/fi\";\n\nclass DateSelect extends Component {\n    state = {\n        count: 0,\n        date: new Date(),\n        games: null\n    }\n\n    handleNext = async () => {\n        let countobj = { ...this.state };\n        let countcopy = countobj.count;\n        countcopy = countcopy + 1\n        this.componentDidMount(countcopy);\n    }\n\n    handlePrevious = async () => {\n        let countobj = { ...this.state };\n        let countcopy = countobj.count;\n        countcopy = countcopy - 1;\n        this.componentDidMount(countcopy);\n    }\n\n    componentDidMount = async (day) => {\n        let countcopy = day !== undefined ? day : this.state.count\n        let date_today = new Date();\n        let date = await plusToDate(date_today, countcopy);\n        let games = await getDay(today(date));\n\n        this.setState({\n            count: countcopy,\n            date: date,\n            games\n        })\n\n        console.log(this.state)\n    }\n\n    render() {\n        return <React.Fragment>\n            <div className=\"container\">\n                <div className=\"text-center\">\n                    <IconContext.Provider value={{ style: { verticalAlign: 'middle' } }}>\n                        <h1>\n                            <i onClick={(e) => this.handlePrevious(e)}>\n                                <FiArrowLeftCircle />\n                            </i> Today's Matchups <i onClick={(e) => this.handleNext(e)}>\n                                <FiArrowRightCircle />\n                            </i>\n                        </h1>\n                        <h2>{this.state.date.toLocaleDateString(\"en-CA\")}</h2>\n                    </IconContext.Provider>\n                </div>\n            </div>\n            <Matchups\n                date={this.state.date}\n                games={this.state.games}\n            />\n        </React.Fragment>\n    }\n}\n\nexport default DateSelect;","import React from 'react';\n\nconst Team = ({ gamePrevious, gameCurrent }) => (\n    <React.Fragment>\n        <div>\n            <img src={gamePrevious[0].logo_team} alt=\"teamlogo\"></img>\n        </div>\n        <br />\n        <div>\n            <ul className=\"list-group\">\n                <li className=\"list-group-item active\">Team batting</li>\n                <li className=\"list-group-item\">\n                    <table className=\"table table-hover\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\"></th>\n                                <th scope=\"col\">2018</th>\n                                <th scope=\"col\">2019</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <th scope=\"row\">Runs</th>\n                                <td>{gamePrevious[0].team_runs}</td>\n                                <td>{gameCurrent[0].team_runs}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\">On base pct</th>\n                                <td>{gamePrevious[0].team_obp}</td>\n                                <td>{gameCurrent[0].team_obp}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\">On base pct + slugging</th>\n                                <td>{gamePrevious[0].team_ops}</td>\n                                <td>{gameCurrent[0].team_ops}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\">On base pct + slugging (normalized)</th>\n                                <td>{gamePrevious[0].team_opsp}</td>\n                                <td>{gameCurrent[0].team_opsp}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </li>\n            </ul>\n        </div>\n        <br />\n    </React.Fragment>\n);\n\nexport default Team;","import React from 'react';\n\nconst Opponent = ({ gamePrevious, gameCurrent }) => (\n    <React.Fragment>\n        <div>\n            <img src={gamePrevious[0].logo_opponent} alt=\"opponentlogo\"></img>\n        </div>\n        <br />\n        <div>\n            <ul className=\"list-group\">\n                <li className=\"list-group-item active\">Team batting</li>\n                <li className=\"list-group-item\">\n                    <table className=\"table table-hover\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\"></th>\n                                <th scope=\"col\">2018</th>\n                                <th scope=\"col\">2019</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <th scope=\"row\">Runs</th>\n                                <td>{gamePrevious[0].opponent_runs}</td>\n                                <td>{gameCurrent[0].opponent_runs}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\">On base pct</th>\n                                <td>{gamePrevious[0].opponent_obp}</td>\n                                <td>{gameCurrent[0].opponent_obp}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\">On base pct + slugging</th>\n                                <td>{gamePrevious[0].opponent_ops}</td>\n                                <td>{gameCurrent[0].opponent_ops}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\">On base pct + slugging (normalized)</th>\n                                <td>{gamePrevious[0].opponent_opsp}</td>\n                                <td>{gameCurrent[0].opponent_opsp}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </li>\n            </ul>\n        </div>\n        <br />\n    </React.Fragment>\n);\n\nexport default Opponent;","import React, { Component } from 'react';\nimport { getMatchupPrevious, getMatchupCurrent } from '../API';\nimport Team from '../components/Team';\nimport Opponent from '../components/Opponent';\n\nexport class Matchup extends Component {\n\n    state = {\n        game: null\n    };\n\n    componentDidMount = async () => {\n        const { gameno } = this.props.match.params;\n        const gamePrevious = await getMatchupPrevious(gameno);\n        const gameCurrent = await getMatchupCurrent(gameno);\n        const count = this.props.count;\n        this.setState({\n            gamePrevious,\n            gameCurrent,\n            count\n        })\n    }\n\n\n    render() {\n\n        const { gamePrevious, gameCurrent } = this.state;\n\n        return gamePrevious\n            ? <React.Fragment>\n                <div className=\"container\">\n                    <div className=\"container-fluid\">\n                        <div className=\"row\" id=\"matchupboxes\">\n                            <div className=\"col-lg-6\" id=\"home\">\n                                <h4>Home Team</h4>\n                                <Team\n                                    gameCurrent={gameCurrent}\n                                    gamePrevious={gamePrevious} />\n                            </div>\n                            <div className=\"col-lg-6\" id=\"away\">\n                                <h4>Away Team</h4>\n                                <Opponent\n                                    gameCurrent={gameCurrent}\n                                    gamePrevious={gamePrevious} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n            : <h3>Loading...</h3>\n    }\n}\n\nexport default Matchup;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport NotFound from './NotFound';\nimport DateSelect from '../containers/DateSelect';\nimport Matchup from '../containers/Matchup';\n\nconst Routes = () => (\n    <Switch>\n        <Route exact path=\"/\" component={DateSelect} />\n        <Route\n            exact path=\"/schedule/:gameno\" component={Matchup} />\n        <Route path=\"*\" component={NotFound} />\n    </Switch>\n);\n\nexport default Routes;","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Routes from './components/Routes';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <main id=\"app\">\n          <Routes />\n        </main>\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}