{"version":3,"sources":["components/Header.js","components/Footer.js","components/NotFound.js","components/Matchups.js","API.js","containers/DateSelect.js","components/Team.js","components/Opponent.js","containers/Matchup.js","components/Routes.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Link","to","style","textDecoration","color","Footer","NotFound","Matchup","games","this","props","Fragment","map","game","key","gameno","pathname","concat","src","logo_team","alt","logo_opponent","team","team_xrr","team_erp","opponent_xrr","opponent_erp","toFixed","opponent_initials","Component","getDay","_x","_getDay","apply","arguments","_callee2","calendar_date","response","regenerator_default","wrap","_context2","prev","next","fetch","method","headers","Content-type","body","JSON","stringify","date","sent","abrupt","json","stop","today","dd","getDate","mm","getMonth","getFullYear","plusToDate","days","result","Date","setDate","getMatchup","_x2","_getMatchup","_callee3","_context3","DateSelect","state","count","handleNext","_callee","countobj","countcopy","_context","Object","objectSpread","_this","componentDidMount","handlePrevious","day","date_today","undefined","setState","_this2","iconContext","Provider","value","verticalAlign","onClick","e","fi","toLocaleDateString","Matchups","Team","_ref","scope","team_runs","team_obp","team_ops","team_opsp","Opponent","opponent_runs","opponent_obp","opponent_ops","opponent_opsp","_Component","_getPrototypeOf2","classCallCheck","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","asyncToGenerator","mark","match","params","inherits","createClass","id","components_Team","components_Opponent","Routes","Switch","Route","exact","path","component","App","components_Header","components_Routes","components_Footer","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.45d33cc0.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => (\n  <div className=\"container\">\n    <nav className=\"navbar navbar-light bg-primary\">\n      <span className=\"navbar-brand mb-0 h1 text-white\"><Link to=\"/\" style={{ textDecoration: 'none', color: '#FFFFFF' }}>Baseball!</Link></span>\n    </nav>\n  </div>\n);\n\nexport default Header;","import React from 'react';\n\nconst Footer = () => (\n  <div className=\"container\">\n    <nav className=\"navbar sticky-bottom navbar-light bg-light\">\n      <span className=\"navbar-brand\">&copy; Baseball!</span>\n    </nav>\n  </div>\n);\n\nexport default Footer;","import React from 'react';\n\nconst NotFound = () => (\n    <div className = \"container\">\n        <div className = \"jumbotron\">\n            <div className=\"container\">\n                <h1 className=\"display-4\">Not Found!</h1>\n                <p className=\"lead\">The page you are looking for is unavailable.</p>\n            </div>\n        </div>\n    </div>\n)\n\nexport default NotFound;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Matchup extends Component {\n\n    render() {\n        const { games } = this.props\n        return games\n            ? <React.Fragment>\n                <div className=\"container\">\n                    <ul className=\"list-group\">\n                        {\n                            games.map(game => (\n                                <li key={game.gameno} className=\"list-group-item\">\n                                    <Link to={{ pathname: `/schedule/${game.gameno}` }}>\n                                        <section className=\"matchup_cards\">\n                                            <img src={game.logo_team} alt=\"teamlogo\"></img> vs <img src={game.logo_opponent} alt=\"opponentlogo\"></img>\n                                            <section>\n                                                <p>{game.team} ({((game.team_xrr + game.team_erp) / (game.opponent_xrr + game.opponent_erp)).toFixed(2)}) vs {game.opponent_initials} ({((game.opponent_xrr + game.opponent_erp) / (game.team_xrr + game.team_erp)).toFixed(2)})</p>\n                                            </section>\n                                        </section>\n                                    </Link>\n                                </li>\n                            ))\n                        }\n                    </ul>\n                </div>\n                <br />\n            </React.Fragment>\n            : (<div className=\"container\">\n                <h1>Loading...</h1>\n            </div>);\n    }\n}\n\nexport default Matchup;","///////////////////\n//\n//Game schedule\n//\n///////////////////\n\nexport async function getSchedule() {\n\tconst response = await fetch('/api/schedule');\n\treturn response.json({ 'games': response });\n\n}\n\nexport async function getDay(calendar_date) {\n\n\tconst response = await fetch('/api/schedule/:getDay', {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\t'date': calendar_date\n\t\t})\n\t});\n\n\treturn response.json({ 'games': response })\n\n}\n\n///////////////////\n//\n//Date format\n//\n///////////////////\n\nexport function today(date) {\n\tvar today = ''\n\tvar dd = date.getDate();\n\tvar mm = date.getMonth() + 1; //January is 0!\n\tvar yyyy = date.getFullYear();\n\n\tif (dd < 10) {\n\t\tdd = '0' + dd\n\t}\n\n\tif (mm < 10) {\n\t\tmm = '0' + mm\n\t}\n\n\ttoday = yyyy + '-' + mm + '-' + dd;\n\t//today2='2019-04-01'\n\treturn today\n\n}\n\nexport function plusToDate(date, days) {\n\n\tvar result = new Date(date);\n\tresult.setDate(date.getDate() + days);\n\treturn result;\n\n}\n\n///////////////////\n//\n//Matchup\n//\n///////////////////\n\nexport async function getMatchup(gameno) {\n\n\tconst response = await fetch('/api/schedule/:getMatchup', {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\t'gameno': gameno\n\t\t})\n\t});\n\n\treturn response.json({ 'game': response })\n\n}\n","import React, { Component } from 'react';\n\nimport Matchups from '../components/Matchups';\n\nimport { plusToDate } from '../API';\nimport { getDay } from '../API';\nimport { today } from '../API';\n\nimport { IconContext } from \"react-icons\";\nimport { FiArrowLeftCircle } from \"react-icons/fi\";\nimport { FiArrowRightCircle } from \"react-icons/fi\";\n\nclass DateSelect extends Component {\n    state = {\n        count: 0,\n        date: new Date(),\n        games: null\n    }\n\n    handleNext = async () => {\n        let countobj = { ...this.state };\n        let countcopy = countobj.count;\n        countcopy = countcopy + 1\n        this.componentDidMount(countcopy);\n    }\n\n    handlePrevious = async () => {\n        let countobj = { ...this.state };\n        let countcopy = countobj.count;\n        countcopy = countcopy - 1;\n        this.componentDidMount(countcopy);\n    }\n\n    componentDidMount = async (day) => {\n        let countcopy = day !== undefined ? day : this.state.count\n        let date_today = new Date();\n        let date = await plusToDate(date_today, countcopy);\n        let games = await getDay(today(date));\n\n        this.setState({\n            count: countcopy,\n            date: date,\n            games\n        })\n    }\n\n    render() {\n        return <React.Fragment>\n            <div className=\"container\">\n                <div className=\"text-center\">\n                    <IconContext.Provider value={{ style: { verticalAlign: 'middle' } }}>\n                        <h1>\n                            <i onClick={(e) => this.handlePrevious(e)}>\n                                <FiArrowLeftCircle />\n                            </i> Today's Matchups <i onClick={(e) => this.handleNext(e)}>\n                                <FiArrowRightCircle />\n                            </i>\n                        </h1>\n                        <h2>{this.state.date.toLocaleDateString(\"en-CA\")}</h2>\n                    </IconContext.Provider>\n                </div>\n            </div>\n            <Matchups\n                date={this.state.date}\n                games={this.state.games}\n            />\n        </React.Fragment>\n    }\n}\n\nexport default DateSelect;","import React from 'react';\n\nconst Team = ({ game }) => (\n    <React.Fragment>\n        <div>\n            <img src={game[0].logo_team} alt=\"teamlogo\"></img>\n        </div>\n        <br/>\n        <div>\n            <ul className =\"list-group\">\n                <li className = \"list-group-item active\">Team batting</li>\n                <li className = \"list-group-item\">\n                    <table className=\"table table-hover\">\n                        <thead>\n                            <tr>\n                            <th scope=\"col\"></th>\n                            <th scope=\"col\">2018</th>\n                            <th scope=\"col\">2019</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                            <th scope=\"row\">Runs</th>\n                            <td>{game[0].team_runs}</td>\n                            <td>2019...</td>\n                            </tr>\n                            <tr>\n                            <th scope=\"row\">On base pct</th>\n                            <td>{game[0].team_obp}</td>\n                            <td>2019...</td>\n                            </tr>\n                            <tr>\n                            <th scope=\"row\">On base pct + slugging</th>\n                            <td>{game[0].team_ops}</td>\n                            <td>2019...</td>\n                            </tr>\n                            <tr>\n                            <th scope=\"row\">On base pct + slugging (normalized)</th>\n                            <td>{game[0].team_opsp}</td>\n                            <td>2019...</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </li>\n            </ul>\n        </div>\n        <br/>\n    </React.Fragment>\n);\n\nexport default Team;","import React from 'react';\n\nconst Opponent = ({ game }) => (\n    <React.Fragment>\n        <div>\n            <img src={game[0].logo_opponent} alt=\"opponentlogo\"></img>\n        </div>\n        <br/>\n        <div>\n        <ul className =\"list-group\">\n                <li className = \"list-group-item active\">Team batting</li>\n                <li className = \"list-group-item\">\n                <table className=\"table table-hover\">\n                        <thead>\n                            <tr>\n                            <th scope=\"col\"></th>\n                            <th scope=\"col\">2018</th>\n                            <th scope=\"col\">2019</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                            <th scope=\"row\">Runs</th>\n                            <td>{game[0].opponent_runs}</td>\n                            <td>2019...</td>\n                            </tr>\n                            <tr>\n                            <th scope=\"row\">On base pct</th>\n                            <td>{game[0].opponent_obp}</td>\n                            <td>2019...</td>\n                            </tr>\n                            <tr>\n                            <th scope=\"row\">On base pct + slugging</th>\n                            <td>{game[0].opponent_ops}</td>\n                            <td>2019...</td>\n                            </tr>\n                            <tr>\n                            <th scope=\"row\">On base pct + slugging (normalized)</th>\n                            <td>{game[0].opponent_opsp}</td>\n                            <td>2019...</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </li>\n            </ul>\n        </div>\n        <br/>\n    </React.Fragment>\n);\n\nexport default Opponent;","import React, { Component } from 'react';\nimport { getMatchup } from '../API';\nimport Team from '../components/Team';\nimport Opponent from '../components/Opponent';\n\nexport class Matchup extends Component {\n    \n    state = {\n        game : null\n    };\n\n    componentDidMount = async() => {\n        const { gameno } = this.props.match.params;\n        const game = await getMatchup(gameno);\n        const count = this.props.count;\n        this.setState({\n            game,\n            count\n        })\n    }\n\n    \n    render() {\n        \n        const {game} = this.state;\n\n        return game\n            ? <React.Fragment>\n            <div className = \"container\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\" id=\"matchupboxes\">\n                        <div className=\"col-lg-6\" id=\"home\">\n                            <h4>Home Team</h4>\n                            <Team game={game}/>\n                        </div>\n                        <div className=\"col-lg-6\" id=\"away\">\n                            <h4>Away Team</h4>\n                            <Opponent game={game}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            </React.Fragment>\n            : <h3>Loading...</h3>\n    }\n}\n\nexport default Matchup;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport NotFound from './NotFound';\nimport DateSelect from '../containers/DateSelect';\nimport Matchup from '../containers/Matchup';\n\nconst Routes = () => (\n    <Switch>\n        <Route exact path=\"/\" component={DateSelect} />\n        <Route\n            exact path=\"/schedule/:gameno\" component={Matchup} />\n        <Route path=\"*\" component={NotFound} />\n    </Switch>\n);\n\nexport default Routes;","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Routes from './components/Routes';\nimport './App.css';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Header />\n\t\t\t\t<main id=\"app\">\n\t\t\t\t\t<Routes />\n\t\t\t\t</main>\n\t\t\t\t<Footer />\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}